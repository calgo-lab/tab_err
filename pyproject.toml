[project]
name = "tab_err"
version = "0.2.0"
description = "Fully-controllable error generation for tabular data."
readme = "README.md"
authors = [
    { name = "Philipp Jung", email = "philippjung@posteo.de" },
    { name = "Sebastian JÃ¤ger", email = "tab_err@sebastian-jaeger.me" },
]
license = { text = "Apache License 2.0" }
keywords = ["tabular-data", "data-quality", "error-modelling", "data-errors"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

requires-python = ">=3.9,<3.13"
dependencies = [
    "pandas>=2.2.3,<3.0.0",
]

[project.urls]
homepage = "https://tab-err.readthedocs.io/latest/"
repository = "https://github.com/calgo-lab/tab_err"
documentation = "https://tab-err.readthedocs.io/latest/"
"Bug Tracker" = "https://github.com/calgo-lab/tab_err/issues"

[dependency-groups]
ci = [
    "tomli>=2.2.1",
]
dev = [
    "pytest>=8.3.5,<9.0.0",
    "ruff>=0.9.8",
    "pre-commit>=4.0.1,<5.0.0",
    "mypy>=1.14.1,<2.0.0",
    "jupyterlab>=4.3.2,<5.0.0",
    "sphinx>=8.1.3 ; python_version >= '3.11'",
    "myst-parser>=4.0.0 ; python_version >= '3.10'",
    "pydata-sphinx-theme>=0.16.1,<0.17.0",
    "sphinx-autoapi>=3.5.0,<4.0.0",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 160
target-version = "py39"
fix = true
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "ALL", # Include all the rules, including new ones
]
ignore = [
    "FIX", # Temporary developer notes should not break actions
    "COM812", # For compatibility with ruff-format
    "ISC001", # For compatibility with ruff-format
    "S311", # We do not require cryptographically-sound randomness
    "D100", # Do not document public modules
    "D104", # Do not document public packages
    "TD003", # Allow TODOs without links
    "ISC003", # Do not implicietly concatenate strings
    "S101", # Allow testing methods
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401", # Unused imports in __init__ files can make sense
]
"docs/source/conf.py" = [
    "A001", # Allow missing __init__.py for docs
    "INP001", # Allow builtin shadowing for docs
]

[tool.ruff.lint.pydocstyle]
convention = "google"
